<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="AdminVo">
	<resultMap type="com.kh.eg.admin.model.vo.AdminVo" id="adminResultSet">
		<result property="memberName" column="MEMBERNAME" />
		<result property="memberId" column="MEMBERID" />
		<result property="accountn" column="ACCOUNTN" />
		<result property="phone" column="PHONE" />
		<result property="address" column="ADDRESS" />
		<result property="rating" column="RATING" />
		<result property="eMoney" column="EMONEY" />
		<result property="wdStatus" column="WDSTATUS" />
		<result property="blStatus" column="BLSTATUS" />
		<result property="eMail" column="EMAIL" />
		<result property="itemNo" column="ITEMNO" />
		<result property="reportCount" column="REPORTCOUNT" />
		<result property="title" column="ORIGINNAME" />
		<result property="status" column="BOARDSTATUS" />
	</resultMap>
	
	<resultMap type="com.kh.eg.admin.model.vo.Report" id="reportResultSet">
		<result property="memberId" column="MEMBERID" />
		<result property="itemNo" column="ITEMNO" />
		<result property="reportCount" column="REPORTCOUNT" />
		<result property="title" column="ITEMNAME" />
		<result property="status" column="BOARDSTATUS" />
	</resultMap>
	
	<resultMap type="com.kh.eg.admin.model.vo.Category" id="categoryResultSet">
		<result property="categoryNo" column="CATEGORYNO" />
		<result property="categoryName" column="CATEGORYNAME" />
		<result property="categoryLevel" column="CATEGORYLEVEL" />
		<result property="uppercategoryNo" column="UPPERCATEGORYNO" />
		<result property="deleteyn" column="DELETEYN" />
	</resultMap>
	
	<resultMap type="com.kh.eg.admin.model.vo.Exchange" id="exchangeResultSet">
		<result property="rating" column="RATING" />
		<result property="memberId" column="MEMBERID" />
		<result property="mMoney" column="EMONEY" />
		<result property="eMoney" column="MONEY" />
		<result property="acName" column="ACNAME" />
		<result property="bkName" column="BANKNAME" />
		<result property="accountNo" column="ACCOUNTNO" />
	</resultMap>
	
	<resultMap type="com.kh.eg.admin.model.vo.Notice" id="noticeResultSet">
		<result property="writeDay" column="WRITEDAY" />
		<result property="memberId" column="MEMBERID" />
		<result property="title" column="TITLE" />
		<result property="content" column="BOARDCONTENT" />
		<result property="bid" column="BOARDNO" />
	</resultMap>
	
	<resultMap type="com.kh.eg.admin.model.vo.Post" id="postResultSet">
		<result property="boardNo" column="BOARDNO" />
		<result property="memberId" column="MEMBERID" />
		<result property="writeDay" column="WRITEDAY" />
		<result property="phone" column="PHONE" />
		<result property="reply" column="REPLYSTATUS" />
		<result property="title" column="TITLE" />
	</resultMap>
	
	<resultMap type="com.kh.eg.admin.model.vo.Return" id="returnResultSet">
	  <result property="payNo" column="PAYNO" />
      <result property="memberId" column="MEMBERID" />
      <result property="phone" column="PHONE" />
      <result property="orderm" column="ORDERM" />
      <result property="address" column="ADDRESS" />
      <result property="itemName" column="ITEMNAME" />
      <result property="price" column="PRICE" />
   </resultMap>
   
   <resultMap type="com.kh.eg.admin.model.vo.Reply" id="replyResultSet">
	  <result property="commentNo" column="COMMENTNO" />
      <result property="writeday" column="WRITEDAY" />
      <result property="contents" column="CONTENTS" />
      <result property="boardNo" column="BOARDNO" />
      <result property="memberNo" column="MEMBERNO" />
      <result property="deletestatus" column="DELETESTATUS" />
   </resultMap>
   
    <resultMap type="com.kh.eg.admin.model.vo.Board" id="boardResultSet">
	  <result property="boardNo" column="BOARDNO" />
      <result property="title" column="TITLE" />
      <result property="boardContent" column="BOARDCONTENT" />
      <result property="memberNo" column="MEMBERNO" />
      <result property="wirteDay" column="WRITEDAY" />
      <result property="delStatus" column="DELETESTATUS" />
      <result property="boardStatus" column="BOARDSTATUS" />
      <result property="replyStatus" column="REPLYSTATUS" />
      <result property="bCount" column="BCOUNT" />
      <result property="sMemberNo" column="SMEMBERNO" />
      <result property="itemNo" column="ITEMNO" />
   </resultMap>


	<!-- <select id="loginCheck" resultMap="memberResultSet" parameterType="Member"> 
		SELECT * FROM MEMBER WHERE MEMBERID = #{userId} AND MEMBERPWD = #{userPwd} 
		AND BLSTATUS = 'Y' </select> <insert id="insertMember" parameterType="Member"> 
		INSERT INTO MEMBER VALUES(SEQ_MID.NEXTVAL, #{userId}, #{userPwd}, #{userName}, 
		#{email}, #{birthDay}, #{gender}, #{phone}, #{address}, SYSDATE, SYSDATE, 
		DEFAULT ) </insert> 암호화된 비밀번호 조회용 메소드 <select id="selectPwd" resultType="java.lang.String" 
		parameterType="java.lang.String"> SELECT USER_PWD FROM MEMBER WHERE USER_ID 
		= #{userId} AND STATUS = 'Y' </select> -->

	<!-- 회원조회 -->
	<select id="selectMemberList" resultMap="adminResultSet">
		SELECT MEMBERNAME,
		MEMBERID, ACCOUNTN, PHONE, ADDRESS, RATING, EMAIL, EMONEY, WDSTATUS
		FROM MEMBER
		WHERE BLSTATUS = 'N' AND WDSTATUS = 'N'
	</select>
	
	<!-- 회원조회 페이징 -->
	<select id="selectListCount" resultType="_int">
		SELECT COUNT(*)
		FROM
		MEMBER
		WHERE BLSTATUS = 'N' AND WDSTATUS = 'N'
	</select>
	
	<!-- 블랙리스트 조회 -->
	<select id="selectBlackList" resultMap="adminResultSet">
		SELECT MEMBERNAME,
		MEMBERID, ACCOUNTN, PHONE, ADDRESS, RATING, EMAIL, EMONEY, WDSTATUS
		FROM MEMBER
		WHERE BLSTATUS = 'Y'
	</select>
	
	<!-- 블랙리스트 페이징 -->
	<select id="selectBlackListCount" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE BLSTATUS = 'Y'
	</select>
	
	<!-- 검색결과 회원목록 페이징 카운트 -->
	<select id="SearchListCount" resultType="_int" parameterType="com.kh.eg.admin.model.vo.SearchCondition">
		SELECT COUNT(*)
		FROM
		MEMBER
		WHERE BLSTATUS = 'N' AND WDSTATUS = 'N'
		<choose>
			<when test="userId != null">
				AND MEMBERID = #{userId}
			</when>
			<when test="userName != null">
				AND MEMBERNAME LIKE '%' || #{userName} || '%'
			</when>
			<otherwise>
				AND PHONE LIKE '%' || #{phone} || '%'
			</otherwise>
		</choose>
	</select>

	<!-- 검색결과 회원 조회 -->
	<select id="searchMemberList" resultMap="adminResultSet" parameterType="com.kh.eg.admin.model.vo.SearchCondition">
		SELECT MEMBERNAME,
		MEMBERID, ACCOUNTN, PHONE, ADDRESS, RATING, EMAIL, EMONEY, WDSTATUS
		FROM MEMBER
		WHERE BLSTATUS = 'N' AND WDSTATUS = 'N'
		<choose>
			<when test="userId != null">
				AND MEMBERID = #{userId}
			</when>
			<when test="userName != null">
				AND MEMBERNAME LIKE '%' || #{userName} || '%'
			</when>
			<otherwise>
				AND PHONE LIKE '%' || #{phone} || '%'
			</otherwise>
		</choose>
	</select>
	
	<!-- 검색결과 블랙리스트목록 페이징 카운트 -->
	<select id="SearchBlackListCount" resultType="_int" parameterType="com.kh.eg.admin.model.vo.SearchCondition">
		SELECT COUNT(*)
		FROM
		MEMBER
		WHERE BLSTATUS = 'Y'
		<choose>
			<when test="userId != null">
				AND MEMBERID = #{userId}
			</when>
			<when test="userName != null">
				AND MEMBERNAME LIKE '%' || #{userName} || '%'
			</when>
			<otherwise>
				AND PHONE LIKE '%' || #{phone} || '%'
			</otherwise>
		</choose>
	</select>
	
	<!-- 블랙리스트 검색결과 조회 -->
	<select id="searchBlackList" resultMap="adminResultSet" parameterType="com.kh.eg.admin.model.vo.SearchCondition">
		SELECT MEMBERNAME,
		MEMBERID, ACCOUNTN, PHONE, ADDRESS, RATING, EMAIL, EMONEY, WDSTATUS
		FROM MEMBER
		WHERE BLSTATUS = 'Y'
		<choose>
			<when test="userId != null">
				AND MEMBERID = #{userId}
			</when>
			<when test="userName != null">
				AND MEMBERNAME LIKE '%' || #{userName} || '%'
			</when>
			<otherwise>
				AND PHONE LIKE '%' || #{phone} || '%'
			</otherwise>
		</choose>
	</select>
	
	<!-- 회원 사이버머니 관리 리스트 -->
	<select id="memberMoneyList" resultMap="adminResultSet">
		SELECT MEMBERNAME,
		MEMBERID, ACCOUNTN, PHONE, ADDRESS, RATING, EMAIL, EMONEY, WDSTATUS
		FROM MEMBER
	</select>
	
	<!-- 머니 회원 리스트 검색결과 -->
	<select id="searchMoneyList" resultMap="adminResultSet" parameterType="com.kh.eg.admin.model.vo.SearchCondition">
		SELECT MEMBERNAME,
		MEMBERID, ACCOUNTN, PHONE, ADDRESS, RATING, EMAIL, EMONEY, WDSTATUS
		FROM MEMBER
		WHERE BLSTATUS = 'N' AND WDSTATUS = 'N'
		<choose>
			<when test="userId != null">
				AND MEMBERID = #{userId}
			</when>
			<when test="userName != null">
				AND MEMBERNAME LIKE '%' || #{userName} || '%'
			</when>
			<otherwise>
				AND PHONE LIKE '%' || #{phone} || '%'
			</otherwise>
		</choose>
	</select>
	
	<!-- 블랙리스트 추가 -->
	<select id="blackListChange" resultMap="adminResultSet">
		UPDATE MEMBER
		SET BLSTATUS = 'Y'
		WHERE MEMBERID = #{memberId}
	</select>
	
	<!-- 블랙리스트 해제 -->
	<select id="blackListoff" resultMap="adminResultSet">
		UPDATE MEMBER
		SET BLSTATUS = 'N'
		WHERE MEMBERID = #{memberId}
	</select>
	
	<!-- 신고리스트 페이징 -->
	<select id="reportCount" resultType="_int">
		SELECT COUNT(DISTINCT N.ITEMNAME) FROM ATTACHMENT A JOIN REPORT R ON(A.ITEMNO = R.ITEMNO)JOIN AUCTIONITEM N ON(A.ITEMNO = N.ITEMNO) JOIN MEMBER M ON(R.MEMBERNO = M.MEMBERNO) WHERE DELETEYN = 'N'
	</select>
	
	<!-- 신고리스트 -->
	<select id="selectReportList" resultMap="reportResultSet">
		SELECT DISTINCT A.ITEMNO, R.REPORTCOUNT, N.ITEMNAME, M.MEMBERID, R.BOARDSTATUS FROM ATTACHMENT A JOIN REPORT R ON(A.ITEMNO = R.ITEMNO)JOIN AUCTIONITEM N ON(A.ITEMNO = N.ITEMNO) JOIN MEMBER M ON(R.MEMBERNO = M.MEMBERNO) WHERE DELETEYN = 'N'
	</select>
	
	<!-- 검색결과 회원목록 페이징 카운트 -->
	<select id="searchReportListCount" resultType="_int" parameterType="com.kh.eg.admin.model.vo.SearchCondition">
		SELECT COUNT(*) FROM ATTACHMENT A JOIN REPORT R ON(A.ITEMNO = R.ITEMNO)JOIN AUCTIONITEM N ON(A.ITEMNO = N.ITEMNO) JOIN MEMBER M ON(R.MEMBERNO = M.MEMBERNO) WHERE DELETEYN = 'N'
		<choose>
			<when test="userId != null">
				AND MEMBERID = #{userId}
			</when>
			<when test="title != null">
				AND ITEMNAME LIKE '%' || #{title} || '%'
			</when>
			<otherwise>
				AND A.ITEMNO LIKE '%' || #{itemNo} || '%'
			</otherwise>
		</choose>
	</select>
	
	<!-- 블랙리스트 검색결과 조회 -->
	<select id="searchReportList" resultMap="reportResultSet" parameterType="com.kh.eg.admin.model.vo.SearchCondition">
		SELECT A.ITEMNO, R.REPORTCOUNT, N.ITEMNAME, M.MEMBERID, R.BOARDSTATUS FROM ATTACHMENT A JOIN REPORT R ON(A.ITEMNO = R.ITEMNO)JOIN AUCTIONITEM N ON(A.ITEMNO = N.ITEMNO) JOIN MEMBER M ON(R.MEMBERNO = M.MEMBERNO) 
		<choose>
			<when test="userId != null">
				AND MEMBERID = #{userId}
			</when>
			<when test="title != null">
				AND ITEMNAME LIKE '%' || #{title} || '%'
			</when>
			<otherwise>
				AND A.ITEMNO LIKE '%' || #{itemNo} || '%'
			</otherwise>
		</choose>
	</select>
	
	<!-- 카테고리 리스트 -->
	<select id="categoryList" resultMap="categoryResultSet">
		SELECT * FROM CATEGORY WHERE DELETEYN = 'N'
	</select>
	
	<!-- 카테고리 추가 -->
	<select id="insertCategory" resultMap="categoryResultSet">
		INSERT INTO category(categoryNo,categoryName,categoryLevel,upperCategoryNo,deleteYN)
   		VALUES(CN_SEQ.NEXTVAL,#{categoryName},#{categoryLevel},#{uppercategoryNo},'N')
	</select>
	
	<!-- 카테고리 삭제 -->
	<select id="delcategory" resultMap="categoryResultSet">
		UPDATE CATEGORY SET DELETEYN = 'Y' WHERE CATEGORYNAME = #{categoryName}
	</select>
	
	<!-- 환전 페이징 -->
	<select id="payBackListCount" resultType="_int">
		SELECT COUNT(*) FROM MEMBER M JOIN EMONEYR R ON (M.MEMBERNO = R.MEMBERNO)JOIN MACCOUNT C ON (M.MEMBERNO = C.MEMBERNO) JOIN EMONEYE E ON (M.MEMBERNO = E.USENO) 
		WHERE R.USESTATUS = 'R' AND E.EXCHANGEYN = 'N'
	</select>
	
	<!-- 환전 리스트 -->
	<select id="selectPayBackList" resultMap="exchangeResultSet">
		SELECT DISTINCT M.RATING, M.MEMBERID, M.EMONEY, R.MONEY, C.ACNAME, C.BANKNAME, C.ACCOUNTNO FROM MEMBER M JOIN EMONEYR R ON (M.MEMBERNO = R.MEMBERNO)JOIN MACCOUNT C ON (M.MEMBERNO = C.MEMBERNO) JOIN EMONEYE E ON (M.MEMBERNO = E.USENO) WHERE R.USESTATUS = 'R' AND E.EXCHANGEYN = 'N'
	</select>
	
	<!-- 공지사항 리스트 -->
	<select id="selectNoticeList" resultMap="noticeResultSet">
		SELECT B.WRITEDAY, M.MEMBERID, B.TITLE, B.BOARDCONTENT,B.BOARDNO FROM BOARD B JOIN MEMBER M ON (B.MEMBERNO = M.MEMBERNO)WHERE DELETESTATUS = 'N' AND BOARDSTATUS = 'NOTICE'
	</select>
	
	<!-- 문의 카운트 -->
	<select id="postListCount" resultType="_int">
		SELECT COUNT(*) FROM BOARD B JOIN MEMBER M ON (B.MEMBERNO = M.MEMBERNO) 
		WHERE BOARDSTATUS = 'ONEBYONE' AND REPLYSTATUS = 'N' AND DELETESTATUS = 'N'
	</select>
	
	<!-- 문의 리스트 -->
	<select id="selectPostList" resultMap="postResultSet">
		SELECT B.BOARDNO, M.MEMBERID, B.WRITEDAY, M.PHONE, B.REPLYSTATUS, B.TITLE FROM BOARD B JOIN MEMBER M ON (B.MEMBERNO = M.MEMBERNO) 
		WHERE BOARDSTATUS = 'ONEBYONE' AND REPLYSTATUS = 'N' AND DELETESTATUS = 'N'
	</select>
	
	<!-- 반품 카운트 -->
   <select id="returnListCount" resultType="_int">
     SELECT COUNT(*) FROM MEMBER M JOIN WINBID W ON (M.MEMBERNO = W.MEMBERNO) 
      JOIN WINBIDDETAIL D ON(W.DEALNO = D.DEALNO)JOIN AUCTIONITEM A ON (A.ITEMNO = W.ITEMNO) AND ENDDEALSTATUS = 'N' AND D.ORDERM='반품신청'
   </select>
   
   <!-- 반품 리스트 -->
   <select id="selectReturnList" resultMap="returnResultSet">
      SELECT D.PAYNO, M.MEMBERID, M.PHONE, D.ORDERM, M.ADDRESS, A.ITEMNAME, W.PRICE FROM MEMBER M JOIN WINBID W ON (M.MEMBERNO = W.MEMBERNO) 
      JOIN WINBIDDETAIL D ON(W.DEALNO = D.DEALNO)JOIN AUCTIONITEM A ON (A.ITEMNO = W.ITEMNO) AND ENDDEALSTATUS = 'N' AND D.ORDERM='반품신청'
   </select>
   
   <!-- 반품 승인 낙찰테이블 -->
   <select id="returnOk" parameterType="map">
     UPDATE WINBIDDETAIL SET ORDERM = '반품완료', ENDDEALSTATUS = 'Y' WHERE PAYNO = #{payNo}
   </select>
   
   <!-- 반품 거절 -->
   <select id="returnRefuse" resultMap="returnResultSet">
     UPDATE WINBIDDETAIL SET ORDERM = '반품거절', ENDDEALSTATUS = 'Y' WHERE PAYNO = #{payNo}
   </select>
   
   <!-- 반품 승인 구매자 돌려주기 -->
   <select id="buyer" parameterType="map">
	UPDATE MEMBER SET EMONEY = (SELECT DISTINCT EMONEY FROM MEMBER M JOIN WINBID W ON (M.MEMBERNO = W.MEMBERNO) 
	JOIN WINBIDDETAIL A ON (A.DEALNO = W.DEALNO) WHERE PAYNO = #{payNo})+#{price}
	WHERE MEMBERID = (SELECT DISTINCT MEMBERID FROM MEMBER M JOIN WINBID W ON (M.MEMBERNO = W.MEMBERNO) 
	JOIN WINBIDDETAIL A ON (A.DEALNO = W.DEALNO) WHERE PAYNO = #{payNo})
   </select>
   
   <!-- 반품 승인 판매자 빼기  -->
   <select id="seller" parameterType="map" >
	UPDATE MEMBER SET EMONEY = (SELECT DISTINCT EMONEY FROM AUCTIONITEM A JOIN MEMBER M ON (A.MEMBERNO = M.MEMBERNO) 
	JOIN WINBID W ON (W.ITEMNO = A.ITEMNO) JOIN WINBIDDETAIL D ON (D.DEALNO = W.DEALNO) WHERE PAYNO = #{payNo})-#{price}
	WHERE MEMBERID = (SELECT DISTINCT MEMBERID FROM AUCTIONITEM A JOIN MEMBER M ON (A.MEMBERNO = M.MEMBERNO) 
	JOIN WINBID W ON (W.ITEMNO = A.ITEMNO) JOIN WINBIDDETAIL D ON (D.DEALNO = W.DEALNO) WHERE PAYNO = #{payNo})
   </select>
   
	<!-- 환전 완료 -->
	<select id="payBackY" resultMap="exchangeResultSet">
	UPDATE EMONEYE SET EXCHANGEYN = 'Y' WHERE USENO = (SELECT MEMBERNO FROM MEMBER WHERE MEMBERID = #{memberId}) 
	</select>
	
	<!-- 환전 완료 회원 머니 -->
	<select id="payBackUp" parameterType="map">
	UPDATE MEMBER SET EMONEY = ((SELECT EMONEY FROM MEMBER WHERE MEMBERID = #{memberId})-#{eMoney}) WHERE MEMBERNO = (SELECT MEMBERNO FROM MEMBER WHERE MEMBERID = #{memberId})
	</select>
	
	<!-- 환전 거절 -->
	<select id="payBackX" parameterType="map">
		UPDATE EMONEYR SET USESTATUS = 'X' WHERE MEMBERNO = (SELECT MEMBERNO FROM MEMBER WHERE MEMBERID =  #{memberId}) AND USESTATUS = 'R'
	</select>
	
	<!-- 사이버머니 변경 -->
	<select id="moneyChange" parameterType="map">
		UPDATE MEMBER SET EMONEY = #{eMoney} WHERE MEMBERID = #{memberId}
	</select> 
	
	<!-- 신고게시물  삭제 -->
	<select id="auctionDel" parameterType="map">
		UPDATE AUCTIONITEM SET DELETEYN = 'Y' WHERE ITEMNO = #{itemNo}
	</select> 
	
	<!-- 1대1문의 답변  -->
	<select id="replyOk" parameterType="map">
		INSERT INTO reply(commentNo,writeDay,contents,boardNo,memberNo,deleteStatus)
    	VALUES(RN_SEQ.NEXTVAL,SYSDATE,#{contents},#{boardNo},'1','N')
	</select> 
	
	<!-- 1대1문의 보드상태 변경 -->
	<select id="replyStatus" parameterType="map">
		UPDATE BOARD SET REPLYSTATUS = 'Y' WHERE BOARDNO = #{boardNo}
	</select> 
	
	
	
	
	
	
	
</mapper>